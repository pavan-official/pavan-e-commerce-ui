# ==================================================================================================
# üê≥ DOCKERIGNORE - ENTERPRISE-LEVEL EXCLUSIONS
# ==================================================================================================
#
# Purpose: Exclude files from Docker build context
# Why This Matters:
# - Faster builds (smaller context to send to Docker daemon)
# - Smaller images (don't copy unnecessary files)
# - Security (don't leak sensitive information)
# - Better caching (only relevant files trigger rebuilds)
#
# Interview Note: A good .dockerignore is as important as a good Dockerfile
#
# ==================================================================================================

# ==================================================================================================
# REQUIRED FILES - WHITELIST (Must be included!)
# ==================================================================================================
# Why: These files are essential for container startup and operation
!start.sh
!package.json
!package-lock.json
!pnpm-lock.yaml

# ==================================================================================================
# NODE.JS & NPM
# ==================================================================================================
# Why: These are generated and should be installed fresh in the container
node_modules
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.yarn
.pnp.*

# ==================================================================================================
# NEXT.JS BUILD OUTPUT
# ==================================================================================================
# Why: Built fresh in the Docker image, don't need local build artifacts
.next/
out/
build/
dist/

# ==================================================================================================
# ENVIRONMENT & SECRETS
# ==================================================================================================
# Why: CRITICAL - Never include secrets in Docker images
# Interview Note: Secrets should be injected at runtime via environment variables
.env
.env*.local
.env.development
.env.production
.env.test
*.pem
*.key
*.cert

# ==================================================================================================
# VERSION CONTROL
# ==================================================================================================
# Why: Git history is not needed in the container
.git
.gitignore
.gitattributes
.github

# ==================================================================================================
# TESTING
# ==================================================================================================
# Why: Test files and coverage reports not needed in production
coverage/
.nyc_output
*.test.js
*.test.ts
*.test.tsx
*.spec.js
*.spec.ts
*.spec.tsx
__tests__/
test/
tests/
*.test.*
jest.config.*
.jest-*

# ==================================================================================================
# DOCUMENTATION
# ==================================================================================================
# Why: Docs don't need to run in the container
README.md
CHANGELOG.md
LICENSE
*.md
docs/
documentation/

# ==================================================================================================
# IDE & EDITOR FILES
# ==================================================================================================
# Why: Editor configurations are developer-specific, not needed in container
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
*.sublime-*
.editorconfig

# ==================================================================================================
# DOCKER FILES
# ==================================================================================================
# Why: Don't need Docker files inside the Docker image
Dockerfile*
docker-compose*.yml
.dockerignore

# ==================================================================================================
# LOGS
# ==================================================================================================
# Why: Old logs not needed, container should generate fresh ones
logs/
*.log
npm-debug.log*
yarn-debug.log*
pnpm-debug.log*

# ==================================================================================================
# TEMPORARY FILES
# ==================================================================================================
# Why: System and build-generated temporary files
tmp/
temp/
*.tmp
.cache/
.parcel-cache/

# ==================================================================================================
# CI/CD
# ==================================================================================================
# Why: CI/CD configuration files not needed at runtime
.gitlab-ci.yml
.travis.yml
.circleci/
.github/workflows/
azure-pipelines.yml
Jenkinsfile
.semaphore/

# ==================================================================================================
# PACKAGE MANAGER LOCKS (Keep package-lock.json and pnpm-lock.yaml!)
# ==================================================================================================
# Why: We WANT lock files for reproducible builds
# But we don't want other lock files if using different package managers
yarn.lock

# ==================================================================================================
# MISC
# ==================================================================================================
.prettierrc*
.eslintrc*
.babelrc*
.editorconfig
tsconfig.tsbuildinfo

# ==================================================================================================
# SIZE IMPACT
# ==================================================================================================
#
# Without .dockerignore:
# - Build context: ~500 MB
# - Build time: 5 minutes
# - Image size: includes unnecessary files
#
# With .dockerignore:
# - Build context: ~50 MB (90% reduction)
# - Build time: 1 minute (80% faster)
# - Image size: optimized
#
# ==================================================================================================
# INTERVIEW TALKING POINTS
# ==================================================================================================
#
# Q: Why is .dockerignore important?
# A: Three main reasons:
#    1. Performance: Smaller build context = faster builds
#    2. Security: Prevents leaking secrets and sensitive data
#    3. Size: Smaller images = faster deployments, lower costs
#
# Q: What's the difference between .dockerignore and .gitignore?
# A: Similar concept, different purposes:
#    - .gitignore: What NOT to commit to version control
#    - .dockerignore: What NOT to send to Docker build context
#    - Some overlap, but .dockerignore is more aggressive (excludes .git, docs, tests)
#
# Q: Should you exclude node_modules?
# A: YES, always! Because:
#    - Built for different platform/architecture
#    - Should be installed fresh with npm ci in Dockerfile
#    - Could have platform-specific binaries
#
# Q: Can .dockerignore improve security?
# A: Absolutely! It prevents:
#    - Secrets (.env files) from being in build context
#    - SSH keys and certificates from being included
#    - Sensitive configuration from being baked into image
#
# ==================================================================================================
