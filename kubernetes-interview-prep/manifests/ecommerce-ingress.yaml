# ðŸš€ **E-commerce Ingress Resource**
# Purpose: Route external traffic to e-commerce application
# Interview Focus: SSL termination, path-based routing, rate limiting

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ecommerce-ingress
  namespace: ecommerce-production
  annotations:
    # NGINX Ingress Controller annotations
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
    
    # CORS for API endpoints
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    
    # Performance optimizations
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    
    # SSL configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"  # If using cert-manager
    
  labels:
    app: ecommerce
    component: ingress
    environment: production
spec:
  # TLS configuration (requires cert-manager or manual cert)
  tls:
  - hosts:
    - ecommerce.local
    - api.ecommerce.local
    secretName: ecommerce-tls-secret
  
  rules:
  # Main application
  - host: ecommerce.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ecommerce-frontend-service
            port:
              number: 80
  
  # API endpoints
  - host: api.ecommerce.local
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: ecommerce-frontend-service
            port:
              number: 80
  
  # Health check endpoint
  - host: ecommerce.local
    http:
      paths:
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: ecommerce-frontend-service
            port:
              number: 80
